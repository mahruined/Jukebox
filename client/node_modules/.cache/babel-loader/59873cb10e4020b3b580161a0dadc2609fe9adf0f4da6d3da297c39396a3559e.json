{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\client\\\\src\\\\components\\\\Genres\\\\genrepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { FaPlay, FaPause, FaStepBackward, FaStepForward } from 'react-icons/fa';\nimport './Style/genrepage.css';\nimport Playlist from '../../util/playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenrePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [genreName, setGenreName] = useState('');\n\n  // Form state\n  const [newSong, setNewSong] = useState({\n    title: '',\n    album: '',\n    image: '',\n    artist: ''\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:3000/api/songs/${id}`).then(response => {\n      var _backendSongs$;\n      const backendSongs = response.data;\n      const genre = ((_backendSongs$ = backendSongs[0]) === null || _backendSongs$ === void 0 ? void 0 : _backendSongs$.genre) || '';\n      setGenreName(genre);\n      const playlist = new Playlist();\n      const tempSongs = playlist.getGenreSongs(genre);\n      setSongs([...backendSongs, ...tempSongs]);\n      setLoading(false);\n    }).catch(err => {\n      console.error('[GenrePage] Failed to fetch songs:', err);\n      setError('Failed to fetch songs');\n      setLoading(false);\n    });\n  }, [id]);\n  const handlePlay = song => {\n    if (player) player.pause();\n    const newPlayer = new Audio(song.file_path);\n    newPlayer.onloadedmetadata = () => setDuration(newPlayer.duration);\n    newPlayer.ontimeupdate = () => setCurrentTime(newPlayer.currentTime);\n    newPlayer.volume = volume;\n    newPlayer.play();\n    setPlayer(newPlayer);\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    if (player) {\n      player.pause();\n      setIsPlaying(false);\n    }\n  };\n  const togglePlayPause = () => {\n    if (player) {\n      isPlaying ? handlePause() : player.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const handleNext = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    handlePlay(songs[nextIndex]);\n  };\n  const handlePrevious = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\n    handlePlay(songs[prevIndex]);\n  };\n  const handleVolumeChange = event => {\n    const newVolume = parseFloat(event.target.value);\n    setVolume(newVolume);\n    if (player) player.volume = newVolume;\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60).toString().padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n\n  // New song input handlers\n  const handleInputChange = e => {\n    setNewSong({\n      ...newSong,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddSong = () => {\n    const playlist = new Playlist();\n    const songToAdd = {\n      ...newSong,\n      genre: genreName\n    };\n    playlist.saveGenreSongs(genreName, songToAdd);\n    setSongs(prev => [...prev, songToAdd]);\n    setNewSong({\n      title: '',\n      album: '',\n      image: '',\n      artist: ''\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading songs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: genreName || 'Genre'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-song-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a Temporary Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          placeholder: \"Title\",\n          value: newSong.title,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"album\",\n          placeholder: \"Album\",\n          value: newSong.album,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"artist\",\n          placeholder: \"Artist\",\n          value: newSong.artist,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"image\",\n          placeholder: \"Image URL\",\n          value: newSong.image,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"file_path\",\n          placeholder: \"Audio file URL\",\n          value: newSong.file_path,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddSong,\n          children: \"Add Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-list-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.image,\n            alt: song.title,\n            className: \"song-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"song-title\",\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/artist/${song.artist}`,\n              className: \"song-artist\",\n              children: song.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"play-button\",\n            onClick: () => handlePlay(song),\n            children: /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-song-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentSong.image,\n          alt: currentSong.title,\n          className: \"footer-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-title\",\n            children: currentSong.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist\",\n            children: currentSong.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playback-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          children: /*#__PURE__*/_jsxDEV(FaStepBackward, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          children: /*#__PURE__*/_jsxDEV(FaStepForward, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration,\n          value: currentTime,\n          onChange: e => player && (player.currentTime = e.target.value),\n          className: \"progress-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-control\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange,\n          className: \"volume-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(GenrePage, \"wMeXlKJLa1H6JH4kPDS1EhmmisI=\", false, function () {\n  return [useParams];\n});\n_c = GenrePage;\nexport default GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","FaPlay","FaPause","FaStepBackward","FaStepForward","Playlist","jsxDEV","_jsxDEV","GenrePage","_s","id","songs","setSongs","loading","setLoading","error","setError","currentSong","setCurrentSong","player","setPlayer","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","isPlaying","setIsPlaying","genreName","setGenreName","newSong","setNewSong","title","album","image","artist","get","then","response","_backendSongs$","backendSongs","data","genre","playlist","tempSongs","getGenreSongs","catch","err","console","handlePlay","song","pause","newPlayer","Audio","file_path","onloadedmetadata","ontimeupdate","play","handlePause","togglePlayPause","handleNext","currentIndex","findIndex","nextIndex","length","handlePrevious","prevIndex","handleVolumeChange","event","newVolume","parseFloat","target","value","formatTime","time","isNaN","minutes","Math","floor","seconds","toString","padStart","handleInputChange","e","name","handleAddSong","songToAdd","saveGenreSongs","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","map","index","src","alt","to","type","min","max","step","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/client/src/components/Genres/genrepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FaPlay, FaPause, FaStepBackward, FaStepForward } from 'react-icons/fa';\r\nimport './Style/genrepage.css';\r\nimport Playlist from '../../util/playlist';\r\n\r\nconst GenrePage = () => {\r\n  const { id } = useParams();\r\n  const [songs, setSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [player, setPlayer] = useState(null);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [volume, setVolume] = useState(1);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [genreName, setGenreName] = useState('');\r\n\r\n  // Form state\r\n  const [newSong, setNewSong] = useState({\r\n    title: '',\r\n    album: '',\r\n    image: '',\r\n    artist: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3000/api/songs/${id}`)\r\n      .then((response) => {\r\n        const backendSongs = response.data;\r\n        const genre = backendSongs[0]?.genre || '';\r\n        setGenreName(genre);\r\n\r\n        const playlist = new Playlist();\r\n        const tempSongs = playlist.getGenreSongs(genre);\r\n\r\n        setSongs([...backendSongs, ...tempSongs]);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error('[GenrePage] Failed to fetch songs:', err);\r\n        setError('Failed to fetch songs');\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  const handlePlay = (song) => {\r\n    if (player) player.pause();\r\n\r\n    const newPlayer = new Audio(song.file_path);\r\n\r\n    newPlayer.onloadedmetadata = () => setDuration(newPlayer.duration);\r\n    newPlayer.ontimeupdate = () => setCurrentTime(newPlayer.currentTime);\r\n\r\n    newPlayer.volume = volume;\r\n    newPlayer.play();\r\n\r\n    setPlayer(newPlayer);\r\n    setCurrentSong(song);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    if (player) {\r\n      player.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    if (player) {\r\n      isPlaying ? handlePause() : player.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\r\n    const nextIndex = (currentIndex + 1) % songs.length;\r\n    handlePlay(songs[nextIndex]);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\r\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n    handlePlay(songs[prevIndex]);\r\n  };\r\n\r\n  const handleVolumeChange = (event) => {\r\n    const newVolume = parseFloat(event.target.value);\r\n    setVolume(newVolume);\r\n    if (player) player.volume = newVolume;\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    if (isNaN(time)) return '0:00';\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60).toString().padStart(2, '0');\r\n    return `${minutes}:${seconds}`;\r\n  };\r\n\r\n  // New song input handlers\r\n  const handleInputChange = (e) => {\r\n    setNewSong({ ...newSong, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddSong = () => {\r\n    const playlist = new Playlist();\r\n    const songToAdd = { ...newSong, genre: genreName };\r\n    playlist.saveGenreSongs(genreName, songToAdd);\r\n\r\n    setSongs(prev => [...prev, songToAdd]);\r\n    setNewSong({ title: '', album: '', image: '', artist: '',});\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading songs...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"genre-page\">\r\n      <aside className=\"sidebar\">\r\n        <h2>Your Library</h2>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <h1>{genreName || 'Genre'}</h1>\r\n\r\n        {/* Add Song Form */}\r\n        <div className=\"add-song-form\">\r\n          <h3>Add a Temporary Song</h3>\r\n          <input\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            value={newSong.title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            name=\"album\"\r\n            placeholder=\"Album\"\r\n            value={newSong.album}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            name=\"artist\"\r\n            placeholder=\"Artist\"\r\n            value={newSong.artist}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            name=\"image\"\r\n            placeholder=\"Image URL\"\r\n            value={newSong.image}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            name=\"file_path\"\r\n            placeholder=\"Audio file URL\"\r\n            value={newSong.file_path}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button onClick={handleAddSong}>Add Song</button>\r\n        </div>\r\n\r\n        <div className=\"song-list\">\r\n          <div className=\"song-list-header\">\r\n            <span>Title</span>\r\n          </div>\r\n          {songs.map((song, index) => (\r\n            <div key={index} className=\"song-item\">\r\n              <img src={song.image} alt={song.title} className=\"song-cover\" />\r\n              <div className=\"song-info\">\r\n                <span className=\"song-title\">{song.title}</span>\r\n                <Link to={`/artist/${song.artist}`} className=\"song-artist\">\r\n                  {song.artist}\r\n                </Link>\r\n              </div>\r\n              <div className=\"play-button\" onClick={() => handlePlay(song)}>\r\n                <FaPlay />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n\r\n      {currentSong && (\r\n        <footer className=\"footer\">\r\n          <div className=\"current-song-info\">\r\n            <img src={currentSong.image} alt={currentSong.title} className=\"footer-cover\" />\r\n            <div>\r\n              <p className=\"song-title\">{currentSong.title}</p>\r\n              <p className=\"artist\">{currentSong.artist}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"playback-controls\">\r\n            <button onClick={handlePrevious}><FaStepBackward /></button>\r\n            <button onClick={togglePlayPause}>\r\n              {isPlaying ? <FaPause /> : <FaPlay />}\r\n            </button>\r\n            <button onClick={handleNext}><FaStepForward /></button>\r\n          </div>\r\n          <div className=\"song-progress\">\r\n            <span>{formatTime(currentTime)}</span>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={duration}\r\n              value={currentTime}\r\n              onChange={(e) => player && (player.currentTime = e.target.value)}\r\n              className=\"progress-bar\"\r\n            />\r\n            <span>{formatTime(duration)}</span>\r\n          </div>\r\n          <div className=\"volume-control\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              step=\"0.01\"\r\n              value={volume}\r\n              onChange={handleVolumeChange}\r\n              className=\"volume-slider\"\r\n            />\r\n          </div>\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenrePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}