{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\client\\\\src\\\\components\\\\ArtistPage\\\\artistpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Style/artistpage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistPage = () => {\n  _s();\n  const {\n    artistName\n  } = useParams(); // Get artist name from URL\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [artistDescription, setArtistDescription] = useState(\"\"); // For artist description\n\n  useEffect(() => {\n    console.log(`Fetching data for artist: ${artistName}`);\n    axios.get(`http://localhost:3000/api/artists/${artistName}`).then(response => {\n      console.log(\"Received data from backend:\", response.data);\n\n      // Ensure the response data is an array of songs\n      if (!Array.isArray(response.data) || response.data.length === 0) {\n        setError(\"No songs found for this artist.\");\n        setLoading(false);\n        return;\n      }\n      setSongs(response.data); // Directly use response.data as songs\n\n      // Set artist description based on the artist name\n      const description = artistDescriptions[artistName] || \"No description available.\";\n      setArtistDescription(description);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching artist data:\", error);\n      setError(\"Failed to fetch artist data\");\n      setLoading(false);\n    });\n  }, [artistName]); // Re-run the effect when artistName changes\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading artist info...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n\n  // Use the first song's image as the artist image (or a default image)\n  const artistImage = songs.length > 0 ? songs[0].image : \"/default-artist.jpg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artistImage,\n        alt: artistName,\n        className: \"artist-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Artist Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artistDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.image,\n          alt: song.title,\n          className: \"song-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-album\",\n            children: song.album || \"Unknown Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistPage, \"WKmznYvzbxo7bxQYUC+medhgquI=\", false, function () {\n  return [useParams];\n});\n_c = ArtistPage;\nexport default ArtistPage;\nvar _c;\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ArtistPage","_s","artistName","songs","setSongs","loading","setLoading","error","setError","artistDescription","setArtistDescription","console","log","get","then","response","data","Array","isArray","length","description","artistDescriptions","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","artistImage","image","src","alt","map","song","index","title","album","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/client/src/components/ArtistPage/artistpage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Style/artistpage.css\";\r\n\r\nconst ArtistPage = () => {\r\n  const { artistName } = useParams(); // Get artist name from URL\r\n  const [songs, setSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [artistDescription, setArtistDescription] = useState(\"\"); // For artist description\r\n\r\n  useEffect(() => {\r\n    console.log(`Fetching data for artist: ${artistName}`);\r\n\r\n    axios.get(`http://localhost:3000/api/artists/${artistName}`)\r\n      .then((response) => {\r\n        console.log(\"Received data from backend:\", response.data);\r\n\r\n        // Ensure the response data is an array of songs\r\n        if (!Array.isArray(response.data) || response.data.length === 0) {\r\n          setError(\"No songs found for this artist.\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        setSongs(response.data); // Directly use response.data as songs\r\n\r\n        // Set artist description based on the artist name\r\n        const description = artistDescriptions[artistName] || \"No description available.\";\r\n        setArtistDescription(description);\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching artist data:\", error);\r\n        setError(\"Failed to fetch artist data\");\r\n        setLoading(false);\r\n      });\r\n  }, [artistName]); // Re-run the effect when artistName changes\r\n\r\n  if (loading) return <div className=\"loading\">Loading artist info...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  // Use the first song's image as the artist image (or a default image)\r\n  const artistImage = songs.length > 0 ? songs[0].image : \"/default-artist.jpg\";\r\n\r\n  return (\r\n    <div className=\"artist-page\">\r\n      <div className=\"artist-header\">\r\n        <img src={artistImage} alt={artistName} className=\"artist-image\" />\r\n        <h1>{artistName}</h1>\r\n      </div>\r\n\r\n      <div className=\"artist-description\">\r\n        <h3>Artist Description</h3>\r\n        <p>{artistDescription}</p>\r\n      </div>\r\n\r\n      <div className=\"song-list\">\r\n        {songs.map((song, index) => (\r\n          <div key={index} className=\"song-item\">\r\n            <img src={song.image} alt={song.title} className=\"song-cover\" />\r\n            <div className=\"song-info\">\r\n              <span className=\"song-title\">{song.title}</span>\r\n              <span className=\"song-album\">{song.album || \"Unknown Album\"}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}