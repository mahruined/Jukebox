{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\client\\\\src\\\\components\\\\ArtistPage\\\\artistpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Style/artistpage.css\";\nimport Playlist from \"../../util/playlist\"; // ✅ your actual path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistPage = () => {\n  _s();\n  const {\n    artistName\n  } = useParams();\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [artistDescription, setArtistDescription] = useState(\"\");\n\n  // new form state\n  const [newSong, setNewSong] = useState({\n    title: \"\",\n    album: \"\",\n    image: \"\",\n    genre: \"\"\n  });\n  const handleInputChange = e => {\n    setNewSong({\n      ...newSong,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddSong = () => {\n    if (!newSong.title || !newSong.genre) {\n      alert(\"Title and Genre are required\");\n      return;\n    }\n    const playlist = new Playlist();\n    playlist.saveGenreSongs(newSong.genre, {\n      ...newSong,\n      artist: artistName\n    });\n    alert(`Song \"${newSong.title}\" added to genre \"${newSong.genre}\"`);\n    setNewSong({\n      title: \"\",\n      album: \"\",\n      image: \"\",\n      genre: \"\"\n    });\n  };\n  useEffect(() => {\n    axios.get(`http://localhost:3000/api/artists/${artistName}`).then(response => {\n      const {\n        artist,\n        songs\n      } = response.data;\n      if (!songs || songs.length === 0) {\n        setError(\"No songs found for this artist.\");\n        setLoading(false);\n        return;\n      }\n      setSongs(songs);\n      setArtistDescription(artist.description || \"No description available.\");\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching artist data:\", error);\n      setError(\"Failed to fetch artist data\");\n      setLoading(false);\n    });\n  }, [artistName]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading artist info...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  const artistImage = songs.length > 0 ? songs[0].image : \"/default-artist.jpg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artistImage,\n        alt: artistName,\n        className: \"artist-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Artist Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artistDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-song-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a New Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        placeholder: \"Title\",\n        value: newSong.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"album\",\n        placeholder: \"Album\",\n        value: newSong.album,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"image\",\n        placeholder: \"Image URL\",\n        value: newSong.image,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"genre\",\n        placeholder: \"Genre\",\n        value: newSong.genre,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSong,\n        children: \"Add to Genre Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.image,\n          alt: song.title,\n          className: \"song-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-album\",\n            children: song.album || \"Unknown Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistPage, \"zFjSMe35OntsmGwAjdSfDmQvDmQ=\", false, function () {\n  return [useParams];\n});\n_c = ArtistPage;\nexport default ArtistPage;\nvar _c;\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Playlist","jsxDEV","_jsxDEV","ArtistPage","_s","artistName","songs","setSongs","loading","setLoading","error","setError","artistDescription","setArtistDescription","newSong","setNewSong","title","album","image","genre","handleInputChange","e","target","name","value","handleAddSong","alert","playlist","saveGenreSongs","artist","get","then","response","data","length","description","catch","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","artistImage","src","alt","placeholder","onChange","onClick","map","song","index","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/client/src/components/ArtistPage/artistpage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Style/artistpage.css\";\r\nimport Playlist from \"../../util/playlist\"; // ✅ your actual path\r\n\r\nconst ArtistPage = () => {\r\n  const { artistName } = useParams();\r\n  const [songs, setSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [artistDescription, setArtistDescription] = useState(\"\");\r\n\r\n  // new form state\r\n  const [newSong, setNewSong] = useState({\r\n    title: \"\",\r\n    album: \"\",\r\n    image: \"\",\r\n    genre: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewSong({ ...newSong, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddSong = () => {\r\n    if (!newSong.title || !newSong.genre) {\r\n      alert(\"Title and Genre are required\");\r\n      return;\r\n    }\r\n\r\n    const playlist = new Playlist();\r\n    playlist.saveGenreSongs(newSong.genre, {\r\n      ...newSong,\r\n      artist: artistName,\r\n    });\r\n\r\n    alert(`Song \"${newSong.title}\" added to genre \"${newSong.genre}\"`);\r\n    setNewSong({ title: \"\", album: \"\", image: \"\", genre: \"\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3000/api/artists/${artistName}`)\r\n      .then((response) => {\r\n        const { artist, songs } = response.data;\r\n        if (!songs || songs.length === 0) {\r\n          setError(\"No songs found for this artist.\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        setSongs(songs);\r\n        setArtistDescription(artist.description || \"No description available.\");\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching artist data:\", error);\r\n        setError(\"Failed to fetch artist data\");\r\n        setLoading(false);\r\n      });\r\n  }, [artistName]);\r\n\r\n  if (loading) return <div className=\"loading\">Loading artist info...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  const artistImage = songs.length > 0 ? songs[0].image : \"/default-artist.jpg\";\r\n\r\n  return (\r\n    <div className=\"artist-page\">\r\n      <div className=\"artist-header\">\r\n        <img src={artistImage} alt={artistName} className=\"artist-image\" />\r\n        <h1>{artistName}</h1>\r\n      </div>\r\n\r\n      <div className=\"artist-description\">\r\n        <h3>Artist Description</h3>\r\n        <p>{artistDescription}</p>\r\n      </div>\r\n\r\n      {/* New Song Form */}\r\n      <div className=\"add-song-form\">\r\n        <h3>Add a New Song</h3>\r\n        <input\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={newSong.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          name=\"album\"\r\n          placeholder=\"Album\"\r\n          value={newSong.album}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          name=\"image\"\r\n          placeholder=\"Image URL\"\r\n          value={newSong.image}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          name=\"genre\"\r\n          placeholder=\"Genre\"\r\n          value={newSong.genre}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddSong}>Add to Genre Playlist</button>\r\n      </div>\r\n\r\n      <div className=\"song-list\">\r\n        {songs.map((song, index) => (\r\n          <div key={index} className=\"song-item\">\r\n            <img src={song.image} alt={song.title} className=\"song-cover\" />\r\n            <div className=\"song-info\">\r\n              <span className=\"song-title\">{song.title}</span>\r\n              <span className=\"song-album\">{song.album || \"Unknown Album\"}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}