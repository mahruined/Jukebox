{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\musicplayer\\\\src\\\\components\\\\Genres\\\\genrepage.js\",\n  _s = $RefreshSig$();\n// src/components/Genres/genrepage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Style/genrepage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenrePage = () => {\n  _s();\n  const {\n    genreName\n  } = useParams(); // Capture genreName from the URL\n  const [genreId, setGenreId] = useState(null);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Step 1: Fetch the genreId based on the genreName (you could do this in your backend as well)\n  useEffect(() => {\n    // Get the genreId from the name\n    axios.get(`http://localhost:3000/api/genres?name=${genreName}`).then(response => {\n      const genre = response.data[0]; // Assume the response returns an array of genres\n      setGenreId(genre.id); // Set genreId from the response\n      setLoading(false);\n    }).catch(error => {\n      setError('Failed to fetch genre data');\n      setLoading(false);\n    });\n  }, [genreName]);\n\n  // Step 2: Fetch the songs by genreId once genreId is set\n  useEffect(() => {\n    if (genreId) {\n      axios.get(`http://localhost:3000/api/songs/genre/${genreId}`).then(response => {\n        setSongs(response.data); // Set the songs based on the genreId\n      }).catch(() => {\n        setError('Failed to fetch songs');\n      });\n    }\n  }, [genreId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading genre...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Genre: \", genreName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: song.album\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(GenrePage, \"h8PDs7m09HJU/O1/6FfKKaqFpxE=\", false, function () {\n  return [useParams];\n});\n_c = GenrePage;\nexport default GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","GenrePage","_s","genreName","genreId","setGenreId","songs","setSongs","loading","setLoading","error","setError","get","then","response","genre","data","id","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","index","title","album","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/musicplayer/src/components/Genres/genrepage.js"],"sourcesContent":["// src/components/Genres/genrepage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Style/genrepage.css';\r\n\r\nconst GenrePage = () => {\r\n  const { genreName } = useParams(); // Capture genreName from the URL\r\n  const [genreId, setGenreId] = useState(null);\r\n  const [songs, setSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Step 1: Fetch the genreId based on the genreName (you could do this in your backend as well)\r\n  useEffect(() => {\r\n    // Get the genreId from the name\r\n    axios.get(`http://localhost:3000/api/genres?name=${genreName}`)\r\n      .then((response) => {\r\n        const genre = response.data[0]; // Assume the response returns an array of genres\r\n        setGenreId(genre.id); // Set genreId from the response\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError('Failed to fetch genre data');\r\n        setLoading(false);\r\n      });\r\n  }, [genreName]);\r\n\r\n  // Step 2: Fetch the songs by genreId once genreId is set\r\n  useEffect(() => {\r\n    if (genreId) {\r\n      axios.get(`http://localhost:3000/api/songs/genre/${genreId}`)\r\n        .then((response) => {\r\n          setSongs(response.data);  // Set the songs based on the genreId\r\n        })\r\n        .catch(() => {\r\n          setError('Failed to fetch songs');\r\n        });\r\n    }\r\n  }, [genreId]);\r\n\r\n  if (loading) return <div className=\"loading\">Loading genre...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"genre-page\">\r\n      <h1>Genre: {genreName}</h1> {/* Display genreName */}\r\n      <div className=\"song-list\">\r\n        {songs.map((song, index) => (\r\n          <div key={index} className=\"song-item\">\r\n            <span>{song.title}</span>\r\n            <span>{song.album}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenrePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}