{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\musicplayer\\\\src\\\\components\\\\Genres\\\\genrepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenrePage = () => {\n  _s();\n  const [songs, setSongs] = useState([]); // To store songs\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const {\n    id\n  } = useParams(); // Get the genre ID from the URL\n\n  useEffect(() => {\n    axios.get(`http://localhost:3000/api/songs/${id}`) // API call to fetch songs for this genre ID\n    .then(response => {\n      setSongs(response.data); // Set the fetched songs to the state\n      setLoading(false); // Set loading to false once data is fetched\n    }).catch(error => {\n      setError('Failed to fetch songs'); // Handle errors\n      setLoading(false); // Set loading to false even if there's an error\n    });\n  }, [id]); // The effect runs again when `id` changes (i.e., a different genre is selected)\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading songs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Songs for Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-list\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [song.title, \" - \", song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: `http://localhost:3000${song.file_path}`,\n            type: \"audio/mp3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(GenrePage, \"Q1O3HdvZ74FHu3Dr+g8VqujHv9c=\", false, function () {\n  return [useParams];\n});\n_c = GenrePage;\nexport default GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","GenrePage","_s","songs","setSongs","loading","setLoading","error","setError","id","get","then","response","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","song","index","title","artist","controls","src","file_path","type","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/musicplayer/src/components/Genres/genrepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst GenrePage = () => {\r\n  const [songs, setSongs] = useState([]);  // To store songs\r\n  const [loading, setLoading] = useState(true);  // Loading state\r\n  const [error, setError] = useState(null);  // Error state\r\n  const { id } = useParams();  // Get the genre ID from the URL\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3000/api/songs/${id}`)  // API call to fetch songs for this genre ID\r\n      .then((response) => {\r\n        setSongs(response.data);  // Set the fetched songs to the state\r\n        setLoading(false);  // Set loading to false once data is fetched\r\n      })\r\n      .catch((error) => {\r\n        setError('Failed to fetch songs');  // Handle errors\r\n        setLoading(false);  // Set loading to false even if there's an error\r\n      });\r\n  }, [id]);  // The effect runs again when `id` changes (i.e., a different genre is selected)\r\n\r\n  if (loading) {\r\n    return <div>Loading songs...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"genre-page\">\r\n      <h1>Songs for Genre</h1>\r\n      <div className=\"songs-list\">\r\n        {songs.map((song, index) => (\r\n          <div key={index} className=\"song-item\">\r\n            <p>{song.title} - {song.artist}</p>\r\n            {/* Example: Add audio player to play the song */}\r\n            <audio controls>\r\n              <source src={`http://localhost:3000${song.file_path}`} type=\"audio/mp3\" />\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenrePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}