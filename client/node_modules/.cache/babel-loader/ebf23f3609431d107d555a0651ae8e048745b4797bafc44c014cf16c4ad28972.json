{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\musicplayer\\\\src\\\\components\\\\ArtistPage\\\\artistpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Style/artistpage.css\";\nimport artistDescriptions from '../artistinfo/artistinfo.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistPage = () => {\n  _s();\n  var _songs$;\n  const {\n    artistName\n  } = useParams(); // Get artist name from URL\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [artistDescription, setArtistDescription] = useState(\"\"); // For artist description\n\n  useEffect(() => {\n    // Log the artist name being fetched\n    console.log(`Fetching data for artist: ${artistName}`);\n\n    // Fetch the artist's songs dynamically\n    axios.get(`http://localhost:3000/api/artists/${artistName}`).then(response => {\n      console.log('Received data from backend:', response.data);\n      const {\n        songs\n      } = response.data;\n      if (songs.length === 0) {\n        setError(\"Artist not found\");\n      } else {\n        setSongs(songs);\n\n        // Set artist description based on the artist name\n        const description = artistDescriptions[artistName] || \"No description available.\";\n        setArtistDescription(description); // Set the description dynamically\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching artist data:', error);\n      setError(\"Failed to fetch artist data\");\n      setLoading(false);\n    });\n  }, [artistName]); // Re-run the effect when artistName changes\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading artist info...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n\n  // Use the first song's image as the artist image (or default image)\n  const artistImage = ((_songs$ = songs[0]) === null || _songs$ === void 0 ? void 0 : _songs$.image) || \"/default-artist.jpg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artistImage,\n        alt: artistName,\n        className: \"artist-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Artist Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artistDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.image,\n          alt: song.title,\n          className: \"song-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-album\",\n            children: song.album\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistPage, \"WKmznYvzbxo7bxQYUC+medhgquI=\", false, function () {\n  return [useParams];\n});\n_c = ArtistPage;\nexport default ArtistPage;\nvar _c;\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","artistDescriptions","jsxDEV","_jsxDEV","ArtistPage","_s","_songs$","artistName","songs","setSongs","loading","setLoading","error","setError","artistDescription","setArtistDescription","console","log","get","then","response","data","length","description","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","artistImage","image","src","alt","map","song","index","title","album","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/musicplayer/src/components/ArtistPage/artistpage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Style/artistpage.css\";\r\nimport artistDescriptions from '../artistinfo/artistinfo.js';\r\n\r\nconst ArtistPage = () => {\r\n  const { artistName } = useParams(); // Get artist name from URL\r\n  const [songs, setSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [artistDescription, setArtistDescription] = useState(\"\"); // For artist description\r\n\r\n  useEffect(() => {\r\n    // Log the artist name being fetched\r\n    console.log(`Fetching data for artist: ${artistName}`);\r\n\r\n    // Fetch the artist's songs dynamically\r\n    axios.get(`http://localhost:3000/api/artists/${artistName}`)\r\n      .then((response) => {\r\n        console.log('Received data from backend:', response.data);\r\n\r\n        const { songs } = response.data;\r\n\r\n        if (songs.length === 0) {\r\n          setError(\"Artist not found\");\r\n        } else {\r\n          setSongs(songs);\r\n\r\n          // Set artist description based on the artist name\r\n          const description = artistDescriptions[artistName] || \"No description available.\";\r\n          setArtistDescription(description); // Set the description dynamically\r\n        }\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching artist data:', error);\r\n        setError(\"Failed to fetch artist data\");\r\n        setLoading(false);\r\n      });\r\n  }, [artistName]); // Re-run the effect when artistName changes\r\n\r\n  if (loading) return <div className=\"loading\">Loading artist info...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  // Use the first song's image as the artist image (or default image)\r\n  const artistImage = songs[0]?.image || \"/default-artist.jpg\";\r\n\r\n  return (\r\n    <div className=\"artist-page\">\r\n      <div className=\"artist-header\">\r\n        <img src={artistImage} alt={artistName} className=\"artist-image\" />\r\n        <h1>{artistName}</h1>\r\n      </div>\r\n\r\n      <div className=\"artist-description\">\r\n        <h3>Artist Description</h3>\r\n        <p>{artistDescription}</p> {/* Display artist description dynamically */}\r\n      </div>\r\n\r\n      <div className=\"song-list\">\r\n        {songs.map((song, index) => (\r\n          <div key={index} className=\"song-item\">\r\n            <img src={song.image} alt={song.title} className=\"song-cover\" />\r\n            <div className=\"song-info\">\r\n              <span className=\"song-title\">{song.title}</span>\r\n              <span className=\"song-album\">{song.album}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}