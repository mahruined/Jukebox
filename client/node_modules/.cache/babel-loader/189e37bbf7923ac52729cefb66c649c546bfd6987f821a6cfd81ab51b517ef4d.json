{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\musicplayer\\\\src\\\\components\\\\Genres\\\\genrepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Style/genrepage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenrePage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the genre ID from the URL\n  const [songs, setSongs] = useState([]);\n  const [genreName, setGenreName] = useState(''); // State to store genre name\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch the genre name based on the genre ID\n    axios.get(`http://localhost:3000/api/genres/${id}`) // Ensure this endpoint is available\n    .then(response => {\n      setGenreName(response.data.name); // Set the genre name\n    }).catch(error => {\n      setError('Failed to fetch genre');\n    });\n\n    // Fetch songs based on genre ID\n    axios.get(`http://localhost:3000/api/songs/${id}`).then(response => {\n      setSongs(response.data); // Store songs data in state\n      setLoading(false);\n    }).catch(error => {\n      setError('Failed to fetch songs');\n      setLoading(false);\n    });\n  }, [id]); // Dependency on genre ID, so it re-fetches when the genre changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading songs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: genreName || 'Loading Genre...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-list\",\n      children: songs.map((song, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [song.title, \" - \", song.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.image,\n            alt: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: song.file_path,\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), \"Your browser does not support the audio element.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GenrePage, \"8VTeXNuA81hwDHDjclUJyeJDWhA=\", false, function () {\n  return [useParams];\n});\n_c = GenrePage;\nexport default GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","GenrePage","_s","id","songs","setSongs","genreName","setGenreName","loading","setLoading","error","setError","get","then","response","data","name","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","song","index","title","artist","src","image","alt","controls","file_path","type","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/musicplayer/src/components/Genres/genrepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Style/genrepage.css';\r\n\r\nconst GenrePage = () => {\r\n  const { id } = useParams();  // Get the genre ID from the URL\r\n  const [songs, setSongs] = useState([]);\r\n  const [genreName, setGenreName] = useState('');  // State to store genre name\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the genre name based on the genre ID\r\n    axios.get(`http://localhost:3000/api/genres/${id}`)  // Ensure this endpoint is available\r\n      .then((response) => {\r\n        setGenreName(response.data.name);  // Set the genre name\r\n      })\r\n      .catch((error) => {\r\n        setError('Failed to fetch genre');\r\n      });\r\n\r\n    // Fetch songs based on genre ID\r\n    axios.get(`http://localhost:3000/api/songs/${id}`)\r\n      .then((response) => {\r\n        setSongs(response.data);  // Store songs data in state\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError('Failed to fetch songs');\r\n        setLoading(false);\r\n      });\r\n  }, [id]);  // Dependency on genre ID, so it re-fetches when the genre changes\r\n\r\n  if (loading) {\r\n    return <div>Loading songs...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"genre-page\">\r\n      <h1>{genreName || 'Loading Genre...'}</h1> {/* Display the genre name dynamically */}\r\n      <div className=\"songs-list\">\r\n        {songs.map((song, index) => {\r\n          return (\r\n            <div key={index} className=\"song-item\">\r\n              <p>{song.title} - {song.artist}</p>\r\n\r\n              {/* Display image */}\r\n              <img\r\n                src={song.image}\r\n                alt={song.title}\r\n              />\r\n\r\n              {/* Display audio */}\r\n              <audio controls>\r\n                <source src={song.file_path} type=\"audio/mp3\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenrePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EAC7B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACc,GAAG,CAAC,oCAAoCT,EAAE,EAAE,CAAC,CAAE;IAAA,CAClDU,IAAI,CAAEC,QAAQ,IAAK;MAClBP,YAAY,CAACO,QAAQ,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAE;IACrC,CAAC,CAAC,CACDC,KAAK,CAAEP,KAAK,IAAK;MAChBC,QAAQ,CAAC,uBAAuB,CAAC;IACnC,CAAC,CAAC;;IAEJ;IACAb,KAAK,CAACc,GAAG,CAAC,mCAAmCT,EAAE,EAAE,CAAC,CAC/CU,IAAI,CAAEC,QAAQ,IAAK;MAClBT,QAAQ,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;MAC1BN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAAEP,KAAK,IAAK;MAChBC,QAAQ,CAAC,uBAAuB,CAAC;MACjCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC,CAAC,CAAE;;EAEX,IAAIK,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAAkB,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpC;EAEA,IAAIZ,KAAK,EAAE;IACT,oBAAOV,OAAA;MAAAkB,QAAA,EAAMR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,YAAY;IAAAL,QAAA,gBACzBlB,OAAA;MAAAkB,QAAA,EAAKZ,SAAS,IAAI;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAC3CtB,OAAA;MAAKuB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBd,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC1B,oBACE1B,OAAA;UAAiBuB,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACpClB,OAAA;YAAAkB,QAAA,GAAIO,IAAI,CAACE,KAAK,EAAC,KAAG,EAACF,IAAI,CAACG,MAAM;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGnCtB,OAAA;YACE6B,GAAG,EAAEJ,IAAI,CAACK,KAAM;YAChBC,GAAG,EAAEN,IAAI,CAACE;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eAGFtB,OAAA;YAAOgC,QAAQ;YAAAd,QAAA,gBACblB,OAAA;cAAQ6B,GAAG,EAAEJ,IAAI,CAACQ,SAAU;cAACC,IAAI,EAAC;YAAW;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,oDAElD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAbAI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcV,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/DID,SAAS;EAAA,QACEJ,SAAS;AAAA;AAAAsC,EAAA,GADpBlC,SAAS;AAiEf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}