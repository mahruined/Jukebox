{"ast":null,"code":"var _jsxFileName = \"C:\\\\school\\\\SPA\\\\ERMM-musicplayer\\\\Jukebox\\\\client\\\\src\\\\components\\\\Genres\\\\genrepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { FaPlay, FaPause, FaStepBackward, FaStepForward } from 'react-icons/fa';\nimport './Style/genrepage.css';\nimport Playlist from '../.playlist.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenrePage = () => {\n  _s();\n  var _songs$;\n  const {\n    id\n  } = useParams();\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:3000/api/songs/${id}`).then(response => {\n      var _backendSongs$;\n      console.log('[GenrePage] Fetched songs from backend:', response.data);\n      const backendSongs = response.data;\n      const genreName = (_backendSongs$ = backendSongs[0]) === null || _backendSongs$ === void 0 ? void 0 : _backendSongs$.genre;\n      if (!genreName) {\n        setSongs(backendSongs); // fallback, no genre name found\n        setLoading(false);\n        return;\n      }\n      const playlist = new Playlist();\n      const tempSongs = playlist.getGenreSongs(genreName);\n      console.log('[GenrePage] Temporary songs from session:', tempSongs);\n      const mergedSongs = [...backendSongs, ...tempSongs];\n      setSongs(mergedSongs);\n      setLoading(false);\n    }).catch(err => {\n      console.error('[GenrePage] Failed to fetch songs:', err);\n      setError('Failed to fetch songs');\n      setLoading(false);\n    });\n  }, [id]);\n  const handlePlay = song => {\n    if (player) {\n      player.pause();\n    }\n    console.log(`[GenrePage] Playing song: ${song.title}`);\n    const newPlayer = new Audio(song.file_path);\n    newPlayer.onloadedmetadata = () => {\n      console.log(`[GenrePage] Song duration loaded: ${newPlayer.duration}`);\n      setDuration(newPlayer.duration);\n    };\n    newPlayer.ontimeupdate = () => {\n      setCurrentTime(newPlayer.currentTime);\n    };\n    newPlayer.volume = volume;\n    newPlayer.play();\n    setPlayer(newPlayer);\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    if (player) {\n      console.log(`[GenrePage] Pausing song: ${currentSong === null || currentSong === void 0 ? void 0 : currentSong.title}`);\n      player.pause();\n      setIsPlaying(false);\n    }\n  };\n  const togglePlayPause = () => {\n    if (player) {\n      if (isPlaying) {\n        handlePause();\n      } else {\n        console.log(`[GenrePage] Resuming song: ${currentSong === null || currentSong === void 0 ? void 0 : currentSong.title}`);\n        player.play();\n        setIsPlaying(true);\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    console.log(`[GenrePage] Playing next song: ${songs[nextIndex].title}`);\n    handlePlay(songs[nextIndex]);\n  };\n  const handlePrevious = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\n    console.log(`[GenrePage] Playing previous song: ${songs[prevIndex].title}`);\n    handlePlay(songs[prevIndex]);\n  };\n  const handleVolumeChange = event => {\n    const newVolume = parseFloat(event.target.value);\n    console.log(`[GenrePage] Volume changed to: ${newVolume}`);\n    setVolume(newVolume);\n    if (player) {\n      player.volume = newVolume;\n    }\n  };\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60).toString().padStart(2, '0');\n    return `${minutes}:${seconds}`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading songs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genre-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: ((_songs$ = songs[0]) === null || _songs$ === void 0 ? void 0 : _songs$.genre) || 'Genre'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-list-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.image,\n            alt: song.title,\n            className: \"song-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"song-title\",\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/artist/${song.artist}`,\n              className: \"song-artist\",\n              children: song.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"play-button\",\n            onClick: () => handlePlay(song),\n            children: /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-song-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentSong.image,\n          alt: currentSong.title,\n          className: \"footer-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-title\",\n            children: currentSong.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist\",\n            children: currentSong.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playback-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          children: /*#__PURE__*/_jsxDEV(FaStepBackward, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          children: /*#__PURE__*/_jsxDEV(FaStepForward, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration,\n          value: currentTime,\n          onChange: e => player && (player.currentTime = e.target.value),\n          className: \"progress-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-control\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange,\n          className: \"volume-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(GenrePage, \"+FRzyTWjZ1oBefp7Z1vu63WlOYs=\", false, function () {\n  return [useParams];\n});\n_c = GenrePage;\nexport default GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","FaPlay","FaPause","FaStepBackward","FaStepForward","Playlist","jsxDEV","_jsxDEV","GenrePage","_s","_songs$","id","songs","setSongs","loading","setLoading","error","setError","currentSong","setCurrentSong","player","setPlayer","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","isPlaying","setIsPlaying","get","then","response","_backendSongs$","console","log","data","backendSongs","genreName","genre","playlist","tempSongs","getGenreSongs","mergedSongs","catch","err","handlePlay","song","pause","title","newPlayer","Audio","file_path","onloadedmetadata","ontimeupdate","play","handlePause","togglePlayPause","handleNext","currentIndex","findIndex","nextIndex","length","handlePrevious","prevIndex","handleVolumeChange","event","newVolume","parseFloat","target","value","formatTime","time","isNaN","minutes","Math","floor","seconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","image","alt","to","artist","onClick","type","min","max","onChange","e","step","_c","$RefreshReg$"],"sources":["C:/school/SPA/ERMM-musicplayer/Jukebox/client/src/components/Genres/genrepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FaPlay, FaPause, FaStepBackward, FaStepForward } from 'react-icons/fa';\r\nimport './Style/genrepage.css';\r\nimport Playlist from '../.playlist.js'; \r\n\r\nconst GenrePage = () => {\r\n  const { id } = useParams();\r\n  const [songs, setSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [player, setPlayer] = useState(null);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [volume, setVolume] = useState(1);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n  axios.get(`http://localhost:3000/api/songs/${id}`)\r\n    .then((response) => {\r\n      console.log('[GenrePage] Fetched songs from backend:', response.data);\r\n\r\n      const backendSongs = response.data;\r\n      const genreName = backendSongs[0]?.genre;\r\n\r\n      if (!genreName) {\r\n        setSongs(backendSongs); // fallback, no genre name found\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const playlist = new Playlist();\r\n      const tempSongs = playlist.getGenreSongs(genreName);\r\n\r\n      console.log('[GenrePage] Temporary songs from session:', tempSongs);\r\n\r\n      const mergedSongs = [...backendSongs, ...tempSongs];\r\n      setSongs(mergedSongs);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n      console.error('[GenrePage] Failed to fetch songs:', err);\r\n      setError('Failed to fetch songs');\r\n      setLoading(false);\r\n    });\r\n}, [id]);\r\n\r\n\r\n  const handlePlay = (song) => {\r\n    if (player) {\r\n      player.pause();\r\n    }\r\n    console.log(`[GenrePage] Playing song: ${song.title}`);\r\n    const newPlayer = new Audio(song.file_path);\r\n\r\n    newPlayer.onloadedmetadata = () => {\r\n      console.log(`[GenrePage] Song duration loaded: ${newPlayer.duration}`);\r\n      setDuration(newPlayer.duration);\r\n    };\r\n    newPlayer.ontimeupdate = () => {\r\n      setCurrentTime(newPlayer.currentTime);\r\n    };\r\n\r\n    newPlayer.volume = volume;\r\n    newPlayer.play();\r\n\r\n    setPlayer(newPlayer);\r\n    setCurrentSong(song);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    if (player) {\r\n      console.log(`[GenrePage] Pausing song: ${currentSong?.title}`);\r\n      player.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    if (player) {\r\n      if (isPlaying) {\r\n        handlePause();\r\n      } else {\r\n        console.log(`[GenrePage] Resuming song: ${currentSong?.title}`);\r\n        player.play();\r\n        setIsPlaying(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\r\n    const nextIndex = (currentIndex + 1) % songs.length;\r\n    console.log(`[GenrePage] Playing next song: ${songs[nextIndex].title}`);\r\n    handlePlay(songs[nextIndex]);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex(song => song.file_path === currentSong.file_path);\r\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n    console.log(`[GenrePage] Playing previous song: ${songs[prevIndex].title}`);\r\n    handlePlay(songs[prevIndex]);\r\n  };\r\n\r\n  const handleVolumeChange = (event) => {\r\n    const newVolume = parseFloat(event.target.value);\r\n    console.log(`[GenrePage] Volume changed to: ${newVolume}`);\r\n    setVolume(newVolume);\r\n    if (player) {\r\n      player.volume = newVolume;\r\n    }\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    if (isNaN(time)) return '0:00';\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60).toString().padStart(2, '0');\r\n    return `${minutes}:${seconds}`;\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading songs...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"genre-page\">\r\n      <aside className=\"sidebar\">\r\n        <h2>Your Library</h2>\r\n      </aside>\r\n      <main className=\"main-content\">\r\n        <h1>{songs[0]?.genre || 'Genre'}</h1>\r\n        <div className=\"song-list\">\r\n          <div className=\"song-list-header\">\r\n            <span>Title</span>\r\n          </div>\r\n          {songs.map((song, index) => (\r\n            <div key={index} className=\"song-item\">\r\n              <img src={song.image} alt={song.title} className=\"song-cover\" />\r\n              <div className=\"song-info\">\r\n                <span className=\"song-title\">{song.title}</span>\r\n                <Link to={`/artist/${song.artist}`} className=\"song-artist\">\r\n                  {song.artist}\r\n                </Link>\r\n              </div>\r\n              <div \r\n                className=\"play-button\" \r\n                onClick={() => handlePlay(song)}\r\n              >\r\n                <FaPlay />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n      {currentSong && (\r\n        <footer className=\"footer\">\r\n          <div className=\"current-song-info\">\r\n            <img src={currentSong.image} alt={currentSong.title} className=\"footer-cover\" />\r\n            <div>\r\n              <p className=\"song-title\">{currentSong.title}</p>\r\n              <p className=\"artist\">{currentSong.artist}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"playback-controls\">\r\n            <button onClick={handlePrevious}><FaStepBackward /></button>\r\n            <button onClick={togglePlayPause}>\r\n              {isPlaying ? <FaPause /> : <FaPlay />}\r\n            </button>\r\n            <button onClick={handleNext}><FaStepForward /></button>\r\n          </div>\r\n          <div className=\"song-progress\">\r\n            <span>{formatTime(currentTime)}</span>\r\n            <input \r\n              type=\"range\" \r\n              min=\"0\" \r\n              max={duration} \r\n              value={currentTime} \r\n              onChange={(e) => player && (player.currentTime = e.target.value)}\r\n              className=\"progress-bar\"\r\n            />\r\n            <span>{formatTime(duration)}</span>\r\n          </div>\r\n          <div className=\"volume-control\">\r\n            <input \r\n              type=\"range\" \r\n              min=\"0\" \r\n              max=\"1\" \r\n              step=\"0.01\" \r\n              value={volume} \r\n              onChange={handleVolumeChange} \r\n              className=\"volume-slider\"\r\n            />\r\n          </div>\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenrePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}